#include<iostream>
#include<set>
#include<cmath>
#include<string>
#include<vector>
#include<algorithm>
#include<fstream>
#include<list>
#include<stack>
#include<queue>
#include<map>
using namespace std;
#define all(v) v.begin(),v.end()
#define rall(v) v.rbegin(),v.rend()
#define sz(v) ((int)v.size())
#define rep(i,n) for(int i = 0; i < (int)(n); ++i)
#define reprng(i,a,b) for(int i = a; i <= (int)(b); ++i)
#define reprrng(i,n,a) for(int i = n;i >= (int)(a); --i)
#define For(it,c) for(auto  it=c.begin();it!=c.end();++it)
#define log2(n) (log10((long double)n) / log10((long double)2))
#define mp make_pair
typedef long long ll;
bool check(int max, vector<int> &zeroes , int k, pair<int,int> &p)
{

	int end = sz(zeroes) - max ;
	rep(i, end + 1)
	{
		int sumZ = zeroes[i + max - 1] - (i ? zeroes[i - 1]:0);
		if (sumZ <= k)
		{
			p.first = i;
			p.second = i + max - 1;
			return true;
		}
	}
	return false;
 }

int main()
{

	
	int n, k;
	cin >> n >> k;
	vector<short> nums(n);
	vector<int> zeroes(n);
	int sum = 0;
	rep(i, n)
	{
		cin >> nums[i];
		zeroes[i] = sum + (nums[i]? 0 : 1);
		sum += (nums[i]?0:1);

	}
		
	pair<int, int> p;
	int l, h, mid;
	l = 0;
	h = n + 1;
	while (h > l)
	{
		mid = (l + h + 1) / 2;
		if (check(mid,zeroes,k,p))
			l = mid;
		else
			h = mid - 1;
	}
	cout << l << endl;
	rep(i, n)
	{
		if (i >= p.first && i <= p.second && l)
			cout << "1";
		else
			cout << nums[i];
		if (i != n - 1)
			cout << " ";

	}

	return 0;
}